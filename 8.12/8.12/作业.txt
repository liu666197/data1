0.写函数,传入一个参数n,返回n的阶乘的结果
例如: cal(5)  返回的结果为: 5 * 4 * 3 *  2 * 1

1.写函数,要求传入列表或者元组,取得下标为偶数的值作为新的列表或者元组,返回给调用者

2.写函数,判断用户传入的对象(字符串,列表,元组)长度是否大于5

3.写函数,检查列表的长度,如果大于5,则将列表的前5项内容返回给调用者

[12312,32,4,234234,23,432432,4,23] return [12312,32,4,234234,23]

4.写函数,要求传入一个字符串,统计每个字符出现的次数,将其制作为字典返回给调用者 

wekwqekj  {'w': 2,'e': 2,'k': 2..}

5.写函数,接收三个参数,返回值较大的那个数字

6.写函数,检查传入字典的每一个value的长度,如果大于2,那么仅保留前两个长度的内容,并组合为新字典返回给调用者
例如:
传入: 
	dic = {'k1': 'v1v2','k2': [11,22,33,44]}
返回:
	dic {'k1': 'v1','k2': [11,22]}

假定value只能是列表或者字符串



比名片系统难一些(所有知识点的整合,列表,字符串,字典,函数)

双色球彩票系统: 6个功能全部封装成函数.

# 自己的余额自己设置
price = 10000

[{'red': 红球列表,'blue': 蓝球},{'red': 红球列表,'blue': 蓝球}]

彩票: {
	'red': [],
	'blue': int
} 

一张彩票:
{'red': [],'blue': int}

所有的彩票:[{'red': [],'blue': int},{'red': [],'blue': int},{'red': [],'blue': int},{'red': [],'blue': int},{'red': [],'blue': int}]


- 从1-33共33个红色号码球中选择6个号码，并从1-16共16个蓝色号码球中选择1个号码


- 交互大框架 （原始金额自定，彩票2元一张）
==================================================
   双色球 V0.01
 1. 充值  （先显示原有金额，再输入金额，最后显示充值后的金额）
 2. 随机生成一个彩票 (显示生成的彩票: 红球: 12... 蓝球: 蓝球号码) 
 3. 手动输入彩票号码(总共输入7个号码,每个号码中间逗号隔开,前六个是红球号码,最后一个是蓝球号码): 1,2,3,4,5,6,7
 4.查看最新一期彩票结果, 显示开奖后的账户余额 （最新一期彩票结果随机产生）
 	格式:
 	本期彩票的结果为: 红球: 1,2,3,4,5,6 蓝球: 1
 	中6+1 奖金1000万
 	中5+0 奖金200
 	...
 	...
 	...
 	最终账户余额为: xxxx
 5. 显示当前余额
 6. 显示所有的彩票: 
 			红球: 6个数字  蓝球: 1
 			红球: 6个数字  蓝球: 1
 			红球: 6个数字  蓝球: 1
 			红球: 6个数字  蓝球: 1
 			红球: 6个数字  蓝球: 1
 7.	退出系统
==================================================
    请输入操作序号:
