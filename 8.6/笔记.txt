关于嵌套循环的练习,先不要着急把整体做完,先单独做一些个体,然后再从这些个体当中寻找规律的代码

循环:
while循环

for循环: 使用的比较多

格式:
for 循环变量名 in range(start,stop):
	循环体

range(start,stop,step)

start: 开始值

stop: 结束值  包头不包尾

step: 步长  默认值是1  每次循环的时候,循环变量递增或者递减的数值  步长为正,递增;步长为负,递减

当步长为正,start < stop值; 步长为负,start值 > stop值


两个循环到底该使用什么循环?

一般都使用for循环,但是如果涉及到不确定循环次数的时候,一般使用while循环

异常处理: 让程序不发生崩溃

格式:
try:
	可能让程序崩溃的代码
except:
	程序崩溃以后执行的代码


数据类型: 数字 字符串 布尔


列表: 保存多个数据  []  list

存储多个数据: 每个数据逗号隔开即可  [数据1,数据2,数据3]  可以存储不同类型的数据

元素: 列表里面的数据


重点:如何获取和修改里面的数据

通过下标去获取列表中的元素: 格式   列表的变量名[下标]

下标: 列表当中的每个元素的序号,从0开始

修改里面的数据: 列表的变量名[下标] = 值

IndexError: list assignment index out of range : 下标超出了列表下标的范围 (列表越界)

len(列表): 列表的长度(列表的元素个数)

遍历列表: 将列表里面的每个元素都取出来

随机从列表当中获取元素: random.choice(列表名)  random.choices(列表名): 结果是列表

列表的嵌套:  列表当中套列表  一层一层取值

列表中最重要的内容: 遍历  方法


函数: 实现某种功能   可以直接使用:  单词()

方法: 本质是函数(实现某种功能)  方法是属于对象的,实现的是功能是属于该对象能做的事情

方法的使用:   对象.单词()

列表就是对象

列表的方法:

增:
列表.append(): 在末尾添加一个数据

列表.extend(列表): 在末尾添加多条数据

列表.insert(index,object): 在index下标的位置插入一个元素

删:
列表.remove(object): 根据元素删除

列表.pop(index): 根据下标删除

列表.clear(): 清空列表

查: (最好拿个变量接收)
列表.count(元素值): 查找元素出现的次数

列表.index(元素值): 查找该元素值第一次出现的位置

其他方法:
列表.copy(): 拷贝列表

列表.reverse(): 翻转列表

列表.sort(): 列表内容从小往大排列

in语句: 

not in语句: