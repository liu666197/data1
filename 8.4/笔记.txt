pycharm的设置:

windows: file --> settings (ctrl+alt+s)

mac: prefer...(左上角)

字体大小: Editor-->font

代码的注释: 对代码的解释说明(非常重要) 不会在程序里面运行
 
注释的格式: # 注释内容  快捷键: ctrl+/ (shift左边的?键)

尽量给每个变量都设置好注释

所有的程序员都不喜欢写注释,但是又喜欢让别的程序员写注释

代码的搬运工

变量: 存储数据  变量名 = 数据

 name 'a' is not defined : a没有被定义

 =: 赋值运算符 (将代码从右往左看)

 变量(标识符)的命名规范:
 1.可以由数字,字母,_,$符号组成
 2.不能是纯数字或者数字开头
 3.不能有特殊字符(所有的标点符号)
 4.不能是关键字(在python中本身有的单词,已经有特殊的意义) if
 5.最好不要是中文
 6.驼峰标识: 从第二个单词开始,首字母大写  userNamePassWord
 7.用_连接每个单词: user_name
 8.见名知意
 
 练习: 实现两个变量值的交换

 变量 = 值

 瓶子(容器) = 水(饮料)

 与用户进行交互: 用户的操作(输入)

 输出函数: print()

 输入函数: input(提醒文字) : 程序会在该代码的区域停止,等待用户的输入,回车代表输入结束

 拿到用户输入的内容: 将input()赋值给一个变量即可,该变量就代表用户输入的内容

 一个input标签代表输入一次

 练习: 用户输入两个数字,实现两个数字的交换

 数据类型:  数字类型(所有的数字)  字符串类型(带有引号的内容)  布尔类型(True,False)

 判断数据类型的函数: type(变量或者数据)

 数字类型:
 int : 整数
 float : 浮点数 (小数)

 字符串类型: str

 布尔类型: bool

 占位符: 在字符串当中,要用变量表示该变量的值的时候,使用占位符
 占位符的格式: %开头,后面接字母

 占位符:
 	%d   整数
 	%f   小数  %.nf: 保留n位小数
 	%s   字符串 (能代表所有的数据类型)
 占位符的使用: 先在需要表示变量值的位置处写一个占位符,然后在字符串的结尾的单引号右边写上: %(占位符对应的变量名)

 注释: 
 单行注释: # 注释内容

 多行注释: '''注释的内容'''  """注释内容""" (也可以当做字符串使用)

 原型输出: 格式是怎么样的,打印出来的结果就是怎么样的


练习:
用户输入姓名,性别,QQ,手机号,公司(学校)地址
==================================
    姓名:xxx
    性别:xxx    
    QQ:xxxxxxx
    手机号:xxxxxxxx
    公司地址:xxxxxx
==================================

快捷键:
ctrl+c : 复制

ctrl+v : 粘贴

ctrl+x : 剪切

ctrl+z : 撤销

ctrl+y : 删除一行

ctrl+w : 选中光标附近的内容

ctrl+f4: 关闭当前文件

ctrl+d : 快速复制当前行,粘贴到下一行

ctrl+f : 查找内容

ctrl+r : 查找替换

ESC: 关闭弹出的内容

有关于缩进:
tab键: 代码整体右移动
shift+tab: 代码整体左移

运行程序: ctrl+shift+f10

计算机里面用到的快捷键:
windows+d : 快速显示桌面

alt+tab键 : 切换打开的应用程序

运算符: 

赋值运算符: = (代码从右往左)

算数运算符: + - * / %(求余,模运算) // (取整)  ** (幂运算,几次方) a ** b: a的b次方

如果有负数作为求余运算,最终结果的符号依赖于第二个数的符号

+:
1.数学的加法: 左右两边都是数字
2.连接符: 当+左右两边都是字符串的时候,那么会把左右两边的内容连接起来

*:
1.数学的乘法
2.复制符号: 当字符串的左右两边有一个是字符串另外一个是数字n,那么结果是复制了n次的字符串


练习: 随便设置任意一个三位数,求这三位数的每位数的和.


数据类型的转换:

显式转换(强制转换)

字符串的数字转数字类型: int(变量或者数据) float(变量或者数据)
int(): 还可以数字取整


其他类型转字符串类型: str(变量或者数据)

其他类型转布尔类型: bool(变量或者数据)

以下的数据转布尔类型的结果为False:
0,空字符串(''),None(一般结合对象使用)

练习:
1.做加法计算机,用户输入两个数,最后的结果是这两个数的和

2.用户输入一个三位数,打印的结果是三位数的立方和

123

1的立方 + 2的立方 + 3的立方

只要是用户输入的内容,数据类型都是字符串类型

比较运算符: > < >= <=  == (等于) !=(不等于)  (结果一定是布尔类型)

逻辑运算符: 或与非 (一般用在多个条件的时候)

或: or   只要一个条件成立,整体就成立

与: and  所有的条件都成立,整体才成立;只要一个不成立,整体不成立

非: not  取反,原来为True改为False,原来为False,改为True

显示转换: 通过对应的函数进行转化
隐式转换: 数据在运算的过程中,自行发生数据类型的转化 (一般体现在布尔类型里面)

非0即真

0: 条件不成立

1: 条件成立

流程控制: 代码的运行顺序

顺序结构: 代码从上往下运行

选择结构: 选择代码执行

循环结构: 重复执行代码

if 语句

语法:
if 条件:
	条件成立的时候执行的代码

if..else(否则)语句
if 条件:
	条件成立的时候执行的代码
else:
	条件不成立的时候执行的代码

------------------------------------------------



	