每个else只和一个if匹配

in 语句:  x in b : x是否在b里面
not in 语句:  x not in b : x不在b里面

多个if

if..else

另外一种if写法: if .. elif..elif..elif.....else

elif: else if的缩写

格式:
if 条件:
	条件成立的时候执行的代码
elif 条件:
	上面的if条件不成立又需要满足一个新的条件的时候执行的代码
elif 条件:
	上面的if条件不成立又需要满足一个新的条件的时候执行的代码
elif 条件:
	上面的if条件不成立又需要满足一个新的条件的时候执行的代码
elif 条件:
	上面的if条件不成立又需要满足一个新的条件的时候执行的代码
else:
	前面所有的条件都不成立的时候执行的代码

转义字符: 有些符号在字符串当中不能正常显示,可以使用转义字符代替,\开头

\n : 换行
\t : 一个tab键的距离

标点符号由于一些特殊的原因不能正常显示的时候,前面加上\即可

随机数:
import 模块的名字 (所有的import的操作,写到py文件的最前面去)

import random

n-m的随机整数: random.randint(start,stop)
start: 开始值
stop:  结束值

0-1的小数: random.random()

应用:  石头剪刀布 (用户输入数字代表石头剪刀布)
1. 
2.电脑随机出石头(0)剪刀(1) 布(2)
3.得知游戏胜负: 平局  用户胜 用户输

产生结果的时候,格式如下

假如用户输入0,电脑产生1
格式如下:
用户胜,用户出的为石头,电脑出的为剪刀

平局

假如用户输入0,电脑产生2
格式如下:
电脑胜,电脑出的为布,用户出的为石头


用户胜: 0,1  1,2  2,0

平局: 用户 = 电脑

除了以上两种情况,就只有电脑赢

复合运算符: += -= *= /=

+= : 现实中的累加


流程控制: 顺序结构  选择结构

循环结构: 重复执行某些代码 (循环的次数,代码要执行几次)

while循环:

格式:

while 条件:
	重复执行的代码(循环体)

注意:
1.条件只要为True,循环里面的代码就会一直执行 (死循环)

死循环能保证程序一直运行

2.循环变量: 本质是一个变量,变量名字随意,通过该变量来控制循环的次数

使用循环的步骤:
1.初始化循环变量: 变量第一次赋值
2.判断循环条件
3.如果条件成立,执行循环代码;条件不成立,退出循环
4.更新循环变量的值 (非常重要)

重复执行2,3,4;直到条件不成立为止

练习: 石头剪刀布的游戏能玩3次才结束

升级一下: 游戏可以一直玩,但是如果用户赢了,那么游戏结束

break: 终止整个循环

continue: 停止某一次循环,但是循环继续执行

1.输入问候别人的内容

2.输入的内容显示在屏幕里面

3.当输入q,Q的时候,不喷了,不聊天了

4.当你输入不良信息的时候,在屏幕上显示你当前输入的内容含有敏感词汇,请重新输入

不良信息: 你大爷的

while...else

while 条件:
	循环体
else:
	循环正常结束时候执行的代码

练习:
1.打印1-100
2.打印1-100的偶数
3.求出1-100的和
4.求出1-100的偶数和
升级:
1.
*
**
***
****
*****

2.
*
***
*****
*******
*********
3.
*
***
*****
*******
*********
*******
*****
***
*

*:
1.数学的乘法
2.复制符号: 字符串 * n --> n的字符串的组合

print(打印的内容,end = "以什么内容结尾")

循环也可以嵌套

-------------------------------------------------

if..elif..elif..else

随机数:
import random
n-m的随机: random.randint(n,m)
0-1的随机: random.random()

循环:
1.初始化循环变量
2.判断循环条件
3.条件成立,执行循环代码;条件不成立,退出循环
4.更新循环变量的值

break: 终止整个循环

continue: 中止一次循环,整个循环还是继续执行的

while..else: 当条件不成立的时候执行的代码(循环正常结束的时候执行的代码)

print(打印的内容,end = '该print语句以什么内容结尾')

循环的嵌套: 循环的代码只要执行了一次,那么这个循环里面代码,就会执行相应的次数




